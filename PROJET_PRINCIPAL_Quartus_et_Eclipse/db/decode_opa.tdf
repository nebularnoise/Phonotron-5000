--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_DECODES=32 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:04:24:18:08:47:SJ cbx_lpm_add_sub 2013:04:24:18:08:47:SJ cbx_lpm_compare 2013:04:24:18:08:47:SJ cbx_lpm_decode 2013:04:24:18:08:47:SJ cbx_mgl 2013:04:24:18:11:10:SJ cbx_stratix 2013:04:24:18:08:47:SJ cbx_stratixii 2013:04:24:18:08:47:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_opa
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[31..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[31..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode586w[2..0]	: WIRE;
	w_anode599w[3..0]	: WIRE;
	w_anode616w[3..0]	: WIRE;
	w_anode626w[3..0]	: WIRE;
	w_anode636w[3..0]	: WIRE;
	w_anode646w[3..0]	: WIRE;
	w_anode656w[3..0]	: WIRE;
	w_anode666w[3..0]	: WIRE;
	w_anode676w[3..0]	: WIRE;
	w_anode688w[2..0]	: WIRE;
	w_anode697w[3..0]	: WIRE;
	w_anode708w[3..0]	: WIRE;
	w_anode718w[3..0]	: WIRE;
	w_anode728w[3..0]	: WIRE;
	w_anode738w[3..0]	: WIRE;
	w_anode748w[3..0]	: WIRE;
	w_anode758w[3..0]	: WIRE;
	w_anode768w[3..0]	: WIRE;
	w_anode779w[2..0]	: WIRE;
	w_anode788w[3..0]	: WIRE;
	w_anode799w[3..0]	: WIRE;
	w_anode809w[3..0]	: WIRE;
	w_anode819w[3..0]	: WIRE;
	w_anode829w[3..0]	: WIRE;
	w_anode839w[3..0]	: WIRE;
	w_anode849w[3..0]	: WIRE;
	w_anode859w[3..0]	: WIRE;
	w_anode870w[2..0]	: WIRE;
	w_anode879w[3..0]	: WIRE;
	w_anode890w[3..0]	: WIRE;
	w_anode900w[3..0]	: WIRE;
	w_anode910w[3..0]	: WIRE;
	w_anode920w[3..0]	: WIRE;
	w_anode930w[3..0]	: WIRE;
	w_anode940w[3..0]	: WIRE;
	w_anode950w[3..0]	: WIRE;
	w_data584w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[31..0] = eq_wire[31..0];
	eq_wire[] = ( ( w_anode950w[3..3], w_anode940w[3..3], w_anode930w[3..3], w_anode920w[3..3], w_anode910w[3..3], w_anode900w[3..3], w_anode890w[3..3], w_anode879w[3..3]), ( w_anode859w[3..3], w_anode849w[3..3], w_anode839w[3..3], w_anode829w[3..3], w_anode819w[3..3], w_anode809w[3..3], w_anode799w[3..3], w_anode788w[3..3]), ( w_anode768w[3..3], w_anode758w[3..3], w_anode748w[3..3], w_anode738w[3..3], w_anode728w[3..3], w_anode718w[3..3], w_anode708w[3..3], w_anode697w[3..3]), ( w_anode676w[3..3], w_anode666w[3..3], w_anode656w[3..3], w_anode646w[3..3], w_anode636w[3..3], w_anode626w[3..3], w_anode616w[3..3], w_anode599w[3..3]));
	w_anode586w[] = ( (w_anode586w[1..1] & (! data_wire[4..4])), (w_anode586w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode599w[] = ( (w_anode599w[2..2] & (! w_data584w[2..2])), (w_anode599w[1..1] & (! w_data584w[1..1])), (w_anode599w[0..0] & (! w_data584w[0..0])), w_anode586w[2..2]);
	w_anode616w[] = ( (w_anode616w[2..2] & (! w_data584w[2..2])), (w_anode616w[1..1] & (! w_data584w[1..1])), (w_anode616w[0..0] & w_data584w[0..0]), w_anode586w[2..2]);
	w_anode626w[] = ( (w_anode626w[2..2] & (! w_data584w[2..2])), (w_anode626w[1..1] & w_data584w[1..1]), (w_anode626w[0..0] & (! w_data584w[0..0])), w_anode586w[2..2]);
	w_anode636w[] = ( (w_anode636w[2..2] & (! w_data584w[2..2])), (w_anode636w[1..1] & w_data584w[1..1]), (w_anode636w[0..0] & w_data584w[0..0]), w_anode586w[2..2]);
	w_anode646w[] = ( (w_anode646w[2..2] & w_data584w[2..2]), (w_anode646w[1..1] & (! w_data584w[1..1])), (w_anode646w[0..0] & (! w_data584w[0..0])), w_anode586w[2..2]);
	w_anode656w[] = ( (w_anode656w[2..2] & w_data584w[2..2]), (w_anode656w[1..1] & (! w_data584w[1..1])), (w_anode656w[0..0] & w_data584w[0..0]), w_anode586w[2..2]);
	w_anode666w[] = ( (w_anode666w[2..2] & w_data584w[2..2]), (w_anode666w[1..1] & w_data584w[1..1]), (w_anode666w[0..0] & (! w_data584w[0..0])), w_anode586w[2..2]);
	w_anode676w[] = ( (w_anode676w[2..2] & w_data584w[2..2]), (w_anode676w[1..1] & w_data584w[1..1]), (w_anode676w[0..0] & w_data584w[0..0]), w_anode586w[2..2]);
	w_anode688w[] = ( (w_anode688w[1..1] & (! data_wire[4..4])), (w_anode688w[0..0] & data_wire[3..3]), enable_wire);
	w_anode697w[] = ( (w_anode697w[2..2] & (! w_data584w[2..2])), (w_anode697w[1..1] & (! w_data584w[1..1])), (w_anode697w[0..0] & (! w_data584w[0..0])), w_anode688w[2..2]);
	w_anode708w[] = ( (w_anode708w[2..2] & (! w_data584w[2..2])), (w_anode708w[1..1] & (! w_data584w[1..1])), (w_anode708w[0..0] & w_data584w[0..0]), w_anode688w[2..2]);
	w_anode718w[] = ( (w_anode718w[2..2] & (! w_data584w[2..2])), (w_anode718w[1..1] & w_data584w[1..1]), (w_anode718w[0..0] & (! w_data584w[0..0])), w_anode688w[2..2]);
	w_anode728w[] = ( (w_anode728w[2..2] & (! w_data584w[2..2])), (w_anode728w[1..1] & w_data584w[1..1]), (w_anode728w[0..0] & w_data584w[0..0]), w_anode688w[2..2]);
	w_anode738w[] = ( (w_anode738w[2..2] & w_data584w[2..2]), (w_anode738w[1..1] & (! w_data584w[1..1])), (w_anode738w[0..0] & (! w_data584w[0..0])), w_anode688w[2..2]);
	w_anode748w[] = ( (w_anode748w[2..2] & w_data584w[2..2]), (w_anode748w[1..1] & (! w_data584w[1..1])), (w_anode748w[0..0] & w_data584w[0..0]), w_anode688w[2..2]);
	w_anode758w[] = ( (w_anode758w[2..2] & w_data584w[2..2]), (w_anode758w[1..1] & w_data584w[1..1]), (w_anode758w[0..0] & (! w_data584w[0..0])), w_anode688w[2..2]);
	w_anode768w[] = ( (w_anode768w[2..2] & w_data584w[2..2]), (w_anode768w[1..1] & w_data584w[1..1]), (w_anode768w[0..0] & w_data584w[0..0]), w_anode688w[2..2]);
	w_anode779w[] = ( (w_anode779w[1..1] & data_wire[4..4]), (w_anode779w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode788w[] = ( (w_anode788w[2..2] & (! w_data584w[2..2])), (w_anode788w[1..1] & (! w_data584w[1..1])), (w_anode788w[0..0] & (! w_data584w[0..0])), w_anode779w[2..2]);
	w_anode799w[] = ( (w_anode799w[2..2] & (! w_data584w[2..2])), (w_anode799w[1..1] & (! w_data584w[1..1])), (w_anode799w[0..0] & w_data584w[0..0]), w_anode779w[2..2]);
	w_anode809w[] = ( (w_anode809w[2..2] & (! w_data584w[2..2])), (w_anode809w[1..1] & w_data584w[1..1]), (w_anode809w[0..0] & (! w_data584w[0..0])), w_anode779w[2..2]);
	w_anode819w[] = ( (w_anode819w[2..2] & (! w_data584w[2..2])), (w_anode819w[1..1] & w_data584w[1..1]), (w_anode819w[0..0] & w_data584w[0..0]), w_anode779w[2..2]);
	w_anode829w[] = ( (w_anode829w[2..2] & w_data584w[2..2]), (w_anode829w[1..1] & (! w_data584w[1..1])), (w_anode829w[0..0] & (! w_data584w[0..0])), w_anode779w[2..2]);
	w_anode839w[] = ( (w_anode839w[2..2] & w_data584w[2..2]), (w_anode839w[1..1] & (! w_data584w[1..1])), (w_anode839w[0..0] & w_data584w[0..0]), w_anode779w[2..2]);
	w_anode849w[] = ( (w_anode849w[2..2] & w_data584w[2..2]), (w_anode849w[1..1] & w_data584w[1..1]), (w_anode849w[0..0] & (! w_data584w[0..0])), w_anode779w[2..2]);
	w_anode859w[] = ( (w_anode859w[2..2] & w_data584w[2..2]), (w_anode859w[1..1] & w_data584w[1..1]), (w_anode859w[0..0] & w_data584w[0..0]), w_anode779w[2..2]);
	w_anode870w[] = ( (w_anode870w[1..1] & data_wire[4..4]), (w_anode870w[0..0] & data_wire[3..3]), enable_wire);
	w_anode879w[] = ( (w_anode879w[2..2] & (! w_data584w[2..2])), (w_anode879w[1..1] & (! w_data584w[1..1])), (w_anode879w[0..0] & (! w_data584w[0..0])), w_anode870w[2..2]);
	w_anode890w[] = ( (w_anode890w[2..2] & (! w_data584w[2..2])), (w_anode890w[1..1] & (! w_data584w[1..1])), (w_anode890w[0..0] & w_data584w[0..0]), w_anode870w[2..2]);
	w_anode900w[] = ( (w_anode900w[2..2] & (! w_data584w[2..2])), (w_anode900w[1..1] & w_data584w[1..1]), (w_anode900w[0..0] & (! w_data584w[0..0])), w_anode870w[2..2]);
	w_anode910w[] = ( (w_anode910w[2..2] & (! w_data584w[2..2])), (w_anode910w[1..1] & w_data584w[1..1]), (w_anode910w[0..0] & w_data584w[0..0]), w_anode870w[2..2]);
	w_anode920w[] = ( (w_anode920w[2..2] & w_data584w[2..2]), (w_anode920w[1..1] & (! w_data584w[1..1])), (w_anode920w[0..0] & (! w_data584w[0..0])), w_anode870w[2..2]);
	w_anode930w[] = ( (w_anode930w[2..2] & w_data584w[2..2]), (w_anode930w[1..1] & (! w_data584w[1..1])), (w_anode930w[0..0] & w_data584w[0..0]), w_anode870w[2..2]);
	w_anode940w[] = ( (w_anode940w[2..2] & w_data584w[2..2]), (w_anode940w[1..1] & w_data584w[1..1]), (w_anode940w[0..0] & (! w_data584w[0..0])), w_anode870w[2..2]);
	w_anode950w[] = ( (w_anode950w[2..2] & w_data584w[2..2]), (w_anode950w[1..1] & w_data584w[1..1]), (w_anode950w[0..0] & w_data584w[0..0]), w_anode870w[2..2]);
	w_data584w[2..0] = data_wire[2..0];
END;
--VALID FILE
