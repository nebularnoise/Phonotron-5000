--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_DECODES=19 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:04:24:18:08:47:SJ cbx_lpm_add_sub 2013:04:24:18:08:47:SJ cbx_lpm_compare 2013:04:24:18:08:47:SJ cbx_lpm_decode 2013:04:24:18:08:47:SJ cbx_mgl 2013:04:24:18:11:10:SJ cbx_stratix 2013:04:24:18:08:47:SJ cbx_stratixii 2013:04:24:18:08:47:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_tpa
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[18..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[18..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode352w[2..0]	: WIRE;
	w_anode365w[3..0]	: WIRE;
	w_anode382w[3..0]	: WIRE;
	w_anode392w[3..0]	: WIRE;
	w_anode402w[3..0]	: WIRE;
	w_anode412w[3..0]	: WIRE;
	w_anode422w[3..0]	: WIRE;
	w_anode432w[3..0]	: WIRE;
	w_anode442w[3..0]	: WIRE;
	w_anode454w[2..0]	: WIRE;
	w_anode463w[3..0]	: WIRE;
	w_anode474w[3..0]	: WIRE;
	w_anode484w[3..0]	: WIRE;
	w_anode494w[3..0]	: WIRE;
	w_anode504w[3..0]	: WIRE;
	w_anode514w[3..0]	: WIRE;
	w_anode524w[3..0]	: WIRE;
	w_anode534w[3..0]	: WIRE;
	w_anode545w[2..0]	: WIRE;
	w_anode554w[3..0]	: WIRE;
	w_anode565w[3..0]	: WIRE;
	w_anode575w[3..0]	: WIRE;
	w_anode585w[3..0]	: WIRE;
	w_anode595w[3..0]	: WIRE;
	w_anode605w[3..0]	: WIRE;
	w_anode615w[3..0]	: WIRE;
	w_anode625w[3..0]	: WIRE;
	w_anode636w[2..0]	: WIRE;
	w_anode645w[3..0]	: WIRE;
	w_anode656w[3..0]	: WIRE;
	w_anode666w[3..0]	: WIRE;
	w_anode676w[3..0]	: WIRE;
	w_anode686w[3..0]	: WIRE;
	w_anode696w[3..0]	: WIRE;
	w_anode706w[3..0]	: WIRE;
	w_anode716w[3..0]	: WIRE;
	w_data350w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[18..0] = eq_wire[18..0];
	eq_wire[] = ( ( w_anode716w[3..3], w_anode706w[3..3], w_anode696w[3..3], w_anode686w[3..3], w_anode676w[3..3], w_anode666w[3..3], w_anode656w[3..3], w_anode645w[3..3]), ( w_anode625w[3..3], w_anode615w[3..3], w_anode605w[3..3], w_anode595w[3..3], w_anode585w[3..3], w_anode575w[3..3], w_anode565w[3..3], w_anode554w[3..3]), ( w_anode534w[3..3], w_anode524w[3..3], w_anode514w[3..3], w_anode504w[3..3], w_anode494w[3..3], w_anode484w[3..3], w_anode474w[3..3], w_anode463w[3..3]), ( w_anode442w[3..3], w_anode432w[3..3], w_anode422w[3..3], w_anode412w[3..3], w_anode402w[3..3], w_anode392w[3..3], w_anode382w[3..3], w_anode365w[3..3]));
	w_anode352w[] = ( (w_anode352w[1..1] & (! data_wire[4..4])), (w_anode352w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode365w[] = ( (w_anode365w[2..2] & (! w_data350w[2..2])), (w_anode365w[1..1] & (! w_data350w[1..1])), (w_anode365w[0..0] & (! w_data350w[0..0])), w_anode352w[2..2]);
	w_anode382w[] = ( (w_anode382w[2..2] & (! w_data350w[2..2])), (w_anode382w[1..1] & (! w_data350w[1..1])), (w_anode382w[0..0] & w_data350w[0..0]), w_anode352w[2..2]);
	w_anode392w[] = ( (w_anode392w[2..2] & (! w_data350w[2..2])), (w_anode392w[1..1] & w_data350w[1..1]), (w_anode392w[0..0] & (! w_data350w[0..0])), w_anode352w[2..2]);
	w_anode402w[] = ( (w_anode402w[2..2] & (! w_data350w[2..2])), (w_anode402w[1..1] & w_data350w[1..1]), (w_anode402w[0..0] & w_data350w[0..0]), w_anode352w[2..2]);
	w_anode412w[] = ( (w_anode412w[2..2] & w_data350w[2..2]), (w_anode412w[1..1] & (! w_data350w[1..1])), (w_anode412w[0..0] & (! w_data350w[0..0])), w_anode352w[2..2]);
	w_anode422w[] = ( (w_anode422w[2..2] & w_data350w[2..2]), (w_anode422w[1..1] & (! w_data350w[1..1])), (w_anode422w[0..0] & w_data350w[0..0]), w_anode352w[2..2]);
	w_anode432w[] = ( (w_anode432w[2..2] & w_data350w[2..2]), (w_anode432w[1..1] & w_data350w[1..1]), (w_anode432w[0..0] & (! w_data350w[0..0])), w_anode352w[2..2]);
	w_anode442w[] = ( (w_anode442w[2..2] & w_data350w[2..2]), (w_anode442w[1..1] & w_data350w[1..1]), (w_anode442w[0..0] & w_data350w[0..0]), w_anode352w[2..2]);
	w_anode454w[] = ( (w_anode454w[1..1] & (! data_wire[4..4])), (w_anode454w[0..0] & data_wire[3..3]), enable_wire);
	w_anode463w[] = ( (w_anode463w[2..2] & (! w_data350w[2..2])), (w_anode463w[1..1] & (! w_data350w[1..1])), (w_anode463w[0..0] & (! w_data350w[0..0])), w_anode454w[2..2]);
	w_anode474w[] = ( (w_anode474w[2..2] & (! w_data350w[2..2])), (w_anode474w[1..1] & (! w_data350w[1..1])), (w_anode474w[0..0] & w_data350w[0..0]), w_anode454w[2..2]);
	w_anode484w[] = ( (w_anode484w[2..2] & (! w_data350w[2..2])), (w_anode484w[1..1] & w_data350w[1..1]), (w_anode484w[0..0] & (! w_data350w[0..0])), w_anode454w[2..2]);
	w_anode494w[] = ( (w_anode494w[2..2] & (! w_data350w[2..2])), (w_anode494w[1..1] & w_data350w[1..1]), (w_anode494w[0..0] & w_data350w[0..0]), w_anode454w[2..2]);
	w_anode504w[] = ( (w_anode504w[2..2] & w_data350w[2..2]), (w_anode504w[1..1] & (! w_data350w[1..1])), (w_anode504w[0..0] & (! w_data350w[0..0])), w_anode454w[2..2]);
	w_anode514w[] = ( (w_anode514w[2..2] & w_data350w[2..2]), (w_anode514w[1..1] & (! w_data350w[1..1])), (w_anode514w[0..0] & w_data350w[0..0]), w_anode454w[2..2]);
	w_anode524w[] = ( (w_anode524w[2..2] & w_data350w[2..2]), (w_anode524w[1..1] & w_data350w[1..1]), (w_anode524w[0..0] & (! w_data350w[0..0])), w_anode454w[2..2]);
	w_anode534w[] = ( (w_anode534w[2..2] & w_data350w[2..2]), (w_anode534w[1..1] & w_data350w[1..1]), (w_anode534w[0..0] & w_data350w[0..0]), w_anode454w[2..2]);
	w_anode545w[] = ( (w_anode545w[1..1] & data_wire[4..4]), (w_anode545w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode554w[] = ( (w_anode554w[2..2] & (! w_data350w[2..2])), (w_anode554w[1..1] & (! w_data350w[1..1])), (w_anode554w[0..0] & (! w_data350w[0..0])), w_anode545w[2..2]);
	w_anode565w[] = ( (w_anode565w[2..2] & (! w_data350w[2..2])), (w_anode565w[1..1] & (! w_data350w[1..1])), (w_anode565w[0..0] & w_data350w[0..0]), w_anode545w[2..2]);
	w_anode575w[] = ( (w_anode575w[2..2] & (! w_data350w[2..2])), (w_anode575w[1..1] & w_data350w[1..1]), (w_anode575w[0..0] & (! w_data350w[0..0])), w_anode545w[2..2]);
	w_anode585w[] = ( (w_anode585w[2..2] & (! w_data350w[2..2])), (w_anode585w[1..1] & w_data350w[1..1]), (w_anode585w[0..0] & w_data350w[0..0]), w_anode545w[2..2]);
	w_anode595w[] = ( (w_anode595w[2..2] & w_data350w[2..2]), (w_anode595w[1..1] & (! w_data350w[1..1])), (w_anode595w[0..0] & (! w_data350w[0..0])), w_anode545w[2..2]);
	w_anode605w[] = ( (w_anode605w[2..2] & w_data350w[2..2]), (w_anode605w[1..1] & (! w_data350w[1..1])), (w_anode605w[0..0] & w_data350w[0..0]), w_anode545w[2..2]);
	w_anode615w[] = ( (w_anode615w[2..2] & w_data350w[2..2]), (w_anode615w[1..1] & w_data350w[1..1]), (w_anode615w[0..0] & (! w_data350w[0..0])), w_anode545w[2..2]);
	w_anode625w[] = ( (w_anode625w[2..2] & w_data350w[2..2]), (w_anode625w[1..1] & w_data350w[1..1]), (w_anode625w[0..0] & w_data350w[0..0]), w_anode545w[2..2]);
	w_anode636w[] = ( (w_anode636w[1..1] & data_wire[4..4]), (w_anode636w[0..0] & data_wire[3..3]), enable_wire);
	w_anode645w[] = ( (w_anode645w[2..2] & (! w_data350w[2..2])), (w_anode645w[1..1] & (! w_data350w[1..1])), (w_anode645w[0..0] & (! w_data350w[0..0])), w_anode636w[2..2]);
	w_anode656w[] = ( (w_anode656w[2..2] & (! w_data350w[2..2])), (w_anode656w[1..1] & (! w_data350w[1..1])), (w_anode656w[0..0] & w_data350w[0..0]), w_anode636w[2..2]);
	w_anode666w[] = ( (w_anode666w[2..2] & (! w_data350w[2..2])), (w_anode666w[1..1] & w_data350w[1..1]), (w_anode666w[0..0] & (! w_data350w[0..0])), w_anode636w[2..2]);
	w_anode676w[] = ( (w_anode676w[2..2] & (! w_data350w[2..2])), (w_anode676w[1..1] & w_data350w[1..1]), (w_anode676w[0..0] & w_data350w[0..0]), w_anode636w[2..2]);
	w_anode686w[] = ( (w_anode686w[2..2] & w_data350w[2..2]), (w_anode686w[1..1] & (! w_data350w[1..1])), (w_anode686w[0..0] & (! w_data350w[0..0])), w_anode636w[2..2]);
	w_anode696w[] = ( (w_anode696w[2..2] & w_data350w[2..2]), (w_anode696w[1..1] & (! w_data350w[1..1])), (w_anode696w[0..0] & w_data350w[0..0]), w_anode636w[2..2]);
	w_anode706w[] = ( (w_anode706w[2..2] & w_data350w[2..2]), (w_anode706w[1..1] & w_data350w[1..1]), (w_anode706w[0..0] & (! w_data350w[0..0])), w_anode636w[2..2]);
	w_anode716w[] = ( (w_anode716w[2..2] & w_data350w[2..2]), (w_anode716w[1..1] & w_data350w[1..1]), (w_anode716w[0..0] & w_data350w[0..0]), w_anode636w[2..2]);
	w_data350w[2..0] = data_wire[2..0];
END;
--VALID FILE
